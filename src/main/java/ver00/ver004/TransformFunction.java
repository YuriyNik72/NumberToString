package ver00.ver004;

import ver01.NumberToText;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class TransformFunction {
    private BigDecimal amount;
    private int indexRod;
    private int indexPad;

    public static void main(String[] args) {
        long l;      // введенное число
        String rod;  // род числа
        String padeg;// падеж числа

        Scanner in = new Scanner(System.in);

        do {
            System.out.print("Введите через запятую: целое число в диапазоне 0 до 999 999 999 999, род: М, Ж или С, падеж: И, В, Р..., для выхода введите 0, , : ");
            l = (long) in.nextDouble();
            rod = in.next();
            padeg = in.next();

       TransformFunction tf = new TransformFunction(l, rod, padeg);
        String money_as_string = tf.numToStr();
        System.out.println(money_as_string);
    } while ( l != 0);
        System.out.println("Введено число: ноль. Работа программы завершена");
    }
    public TransformFunction(long l, String rod, String padeg) {
        String s = String.valueOf(l);
        this.amount = new BigDecimal(s);
        String[] indpad = {"И", "Р", "Д", "В", "Т", "П"};
        for (int i = 0; i < indpad.length; i++) {
            if (indpad[i].equals(padeg)) {
                indexPad = i;
            }
        }
        String[] indrod = {"М", "Ж", "С"};
        for (int i = 0; i < indrod.length; i++) {
            if (indrod[i].equals(rod)) {
                indexRod = i;
            }
        }
    }

    public String asString() {
        return amount.toString();
    }

    public String numToStr() {
        return numToStr(false);
    }

    public String numToStr(boolean strip) {
        String[][] sort = {
                {" ", "один",          "два",  "три", "четыре",   "пять", "шесть", "семь", "восемь", "девять"},
                {" ", "одного",        "двух", "трех", "четырех", "пяти", "шести", "семи", "восьми", "девяти"},
                {" ", "одному",        "двум", "трем", "четырем", "пяти", "шести", "семи", "восьми", "девяти"},
                {" ", "один (одного)", "два",  "три", "четырех",  "пять", "шесть", "семь", "восемь", "девять"},
                {" ", "одним",        "двумя", "тремя","четырьмя", "пятью","шестью","семью","восемью","девятью"},
                {" ", "одном",         "двух", "трех", "четырех",  "пяти", "шести", "семи", "восьми", "девяти"},
        };

        String[][] women = {
                {" ", " ", " ", " ", " ", " "},
                {"одна", "одной", "одной", "одну", "одной (одною)", "одной"},
                {"две",   "двух", "двум",   "две", "двумя",          "двух"},
                {" ", " ", " ", " ", " ", " "},
                {"тысяча", "тысячи", "тысяче", "тысячу", "тысячей", "тысяче"},
                {"тысячи", "тысяч", "тысячам", "тысячи", "тысячами", "тысячах"},
        };

        String[][] str100 = {
                {" ", "сто", "двести", "триста", "четыреста", "пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот"},
                {" ", "ста", "двухсот", "трехсот", "четырехсот", "пятисот", "шестисот", "семисот", "восемисот", "девятисот"},
                {" ", "ста", "двустам", "тремстам", "четыремстам", "пятистам", "шестистам", "семистам", "восьмистам", "девятистам"},
                {" ", "сто", "двести", "триста", "четыреста", "пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот"},
                {" ", "ста", "двумястами", "тремястами", "четырмястами", "пятьюстами", "шестьюстами", "семьюстами", "восемьюстами", "девятьюстами"},
                {" ", "ста", "двустах", "трехстах", "четырехстах", "пятистах", "шестистах", "семистах", "восьмистах", "девятистах"},
        };

        String[][] str11 = {
                {" ", "десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать", "двадцать"},
                {" ", "десяти", "одиннадцати", "двенадцати", "тринадцати", "четырнадцати", "пятнадцати", "шестнадцати", "семнадцати", "восемнадцати", "девятнадцати", "двадцати"},
                {" ", "десяти", "одиннадцати", "двенадцати", "тринадцати", "четырнадцати", "пятнадцати", "шестнадцати", "семнадцати", "восемнадцати", "девятнадцати", "двадцати"},
                {" ", "десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать", "двадцать"},
                {" ", "десятью", "одиннадцатью", "двенадцатью", "тринадцатью", "четырнадцатью", "пятнадцатью", "шестнадцатью", "семнадцатью", "восемнадцатью", "девятнадцатью", "двадцатью"},
                {" ", "десяти", "одиннадцати", "двенадцати", "тринадцати", "четырнадцати", "пятнадцати", "шестнадцати", "семнадцати", "восемнадцати", "девятнадцати", "двадцати"},
        };

        String[][] str10 = {
                {" ", "десять", "двадцать", "тридцать", "сорок", "пятьдесят",   "шестьдесят",   "семьдесят",   "восемьдесят",   "девяносто"},
                {" ", "десяти", "двадцати", "тридцати", "сорока", "пятидесяти", "шестидесяти",  "семидесяти",   "восьмидесяти", "девяносто"},
                {" ", "десяти", "двадцати", "тридцати", "сорока", "пятидесяти", "шестидесяти",   "семидесяти",  "восьмидесяти", "девяноста"},
                {" ", "десять", "двадцать", "тридцать", "сорок", "пятьдесят",   "шестьдесят",    "семьдесят",   "восемьдесят",  "девяносто"},
                {" ", "десятью","двадцатью","тридцатью","сорока", "пятьюдесятью","шестьюдесятью", "семьюдесятью", "восемьюдесятью", "девяноста"},
                {" ", "десяти", "двадцати", "тридцати", "сорока", "пятидесяти",  "шестидесяти",   "семидесяти",   "восьмидесяти",  "девяноста"},
        };
        String[][] forms = {
                {"", "", "", "", "", "", "0"},
                {"", "", "", "", "", "", "0"},
                {"тысячи", "тысяч", "тысячям", "тысячи", "тысячами", "тысячах", "0"},
                {"миллион", "миллиона", "миллиону", "миллион", "миллионом", "миллионе", "0"},
                {"миллиард", "миллиарда", "миллиарду", "миллиард", "миллиардом", "миллиарде", "0"},
                {"триллион", "триллиона", "триллиону", "триллион", "триллионом", "триллионе", "0"},
                // можно добавлять дальше секстиллионы и т.д.
        };
        String[][] str10000 = {
                {"", "", "", "", "", ""},
                {"", "", "", "", "", ""},
                {"тысяч(и)", "тысяч", "тысячам", "тысячи", "тысячами", "тысячах"},
                {"миллиона", "миллионов", "миллионам", "миллиона", "миллионами", "миллионах"},
                {"миллиарда", "миллиардов", "миллиардам", "миллиарда", "миллиардами", "миллиардах"},
                {"триллиона", "триллионов", "триллиардам", "триллиарда", "триллиардами", "триллиардах"}
        };

        long rub = amount.longValue();
        long rub_tmp = rub;

        // Разбиваем число на сегменты по 3 цифры с конца
        ArrayList segments = new ArrayList();
        while (rub_tmp > 999) {
            long seg = rub_tmp / 1000;
            segments.add(rub_tmp - (seg * 1000));
            rub_tmp = seg;
        }
        segments.add(rub_tmp);
        Collections.reverse(segments);

        // Анализируем сегменты
        String o = "";
        if (rub == 0) {// если Ноль
            o = "ноль ";
            if (strip)
                return o;
        }
        int lev = segments.size();
        switch (indexRod) {
            case 2:
            case 0: // мужской род

                // Если больше нуля
                for (int i = 0; i < segments.size(); i++) {// перебираем сегменты
                    int ri = (int) Integer.valueOf(segments.get(i).toString());// текущий сегмент
                    if (ri == 0 && lev > 1) {// если сегмент ==0 И не последний уровень
                        lev--;
                        continue;
                    }
                    String rs = String.valueOf(ri); // Преобразовываем число в строку
                    // нормализация
                    if (rs.length() == 1) rs = "00" + rs;// два нулика в префикс
                    if (rs.length() == 2) rs = "0" + rs; //  один нулик
                    // получаем циферки для анализа
                    int r1 = (int) Integer.valueOf(rs.substring(0, 1)); //первая цифра
                    int r2 = (int) Integer.valueOf(rs.substring(1, 2)); //вторая
                    int r3 = (int) Integer.valueOf(rs.substring(2, 3)); //третья
                    int r22 = (int) Integer.valueOf(rs.substring(1, 3)); //вторая и третья

                    // Анализатор цифр
                    if (ri > 99) o += str100[indexPad][r1] + " "; // Сотни
                    if (r22 > 20) {// десятки >20
                        o += str10[indexPad][r2] + " ";
                        if(lev==2 & r3<=2){
                            o += women[r3][indexPad] + " ";// 0-9
                        }else {
                            o += sort[indexPad][r3] + " "; // 0-9
                        }

                    } else { // десятки <=20
                        if (r22 > 9) {
                            o += str11[indexPad][r22 - 9] + " "; // 10-19
                        } else {
                            if(lev==2 ){
                                if(r3==1){
                                    o += women[1][indexPad] + " "; // 1 в женском роде
                                }else {
                                    if(r3==2){
                                        o += women[2][indexPad] + " "; // 2 в женском роде
                                    } else {
                                        o += sort[indexPad][r3] + " "; // 0-9
                                    }
                                }
                            }else {
                                o += sort[indexPad][r3] + " "; // 0-9
                            }
                        }
                    }

                    // Единицы измерения >999
                    if (r3 == 1 & lev == 2) {
                        if(r22>9 & r3>9){
                            o +=  women[5][indexPad] + " "; //склонение при тысячах больше 9
                        } else {
                            o +=  women[4][indexPad] + " "; // 1 тысяча в женском роде
                        }
                    } else {
                         if (r3 ==2 & lev == 2) {
                            o +=  women[5][indexPad] + " "; // 2 тысячи в женском роде
                         } else {
                             if (lev >= 3 & r3==1 & r22 <= 99) {  // для миллионов и больше
                                 o += forms[lev][indexPad] + " ";
                             } else {
                                 o += str10000[lev][indexPad] + " ";
                             }
                         }
                    }
                    lev--;
                }
                break;
            case 1: //женский род

                // Если больше нуля
                for (int i = 0; i < segments.size(); i++) {// перебираем сегменты
                    int ri = (int) Integer.valueOf(segments.get(i).toString());// текущий сегмент
                    if (ri == 0 && lev > 1) {// если сегмент ==0 И не последний уровень
                        lev--;
                        continue;
                    }
                    String rs = String.valueOf(ri); // Преобразовываем число в строку
                    // нормализация
                    if (rs.length() == 1) rs = "00" + rs;// два нулика в префикс
                    if (rs.length() == 2) rs = "0" + rs; //  один нулик
                    // получаем циферки для анализа
                    int r1 = (int) Integer.valueOf(rs.substring(0, 1)); //первая цифра
                    int r2 = (int) Integer.valueOf(rs.substring(1, 2)); //вторая
                    int r3 = (int) Integer.valueOf(rs.substring(2, 3)); //третья
                    int r22 = (int) Integer.valueOf(rs.substring(1, 3)); //вторая и третья

                    // Анализатор цифр
                    if (ri > 99) o += str100[indexPad][r1] + " "; // Сотни
                    if (r22 > 20) {// десятки >20
                        o += str10[indexPad][r2] + " ";
                        if(lev==2){
                            if(r3<=2){
                                o += women[r3][indexPad] + " ";// 0-9
                            }else {
                                o += sort[indexPad][r3] + " "; // 0-9
                            }
                        } else {
                            if(r3<=2){
                               o += women[r3][indexPad] + " ";// 0-9
                            } else {
                               o += sort[indexPad][r3] + " "; // 0-9
                            }

                        }

                    } else { // десятки <=20
                        if (r22 > 9) {
                            o += str11[indexPad][r22 - 9] + " "; // 10-19
                        } else {
                            if(lev<=2 ){
                                if(r3==1){
                                    o += women[1][indexPad] + " "; // 1 в женском роде
                                }else {
                                    if(r3==2){
                                        o += women[2][indexPad] + " "; // 2 в женском роде
                                    }
                                }
                            }else {
                                o += sort[indexPad][r3] + " "; // 0-9
                            }
                        }
                    }

                    // Единицы измерения >999
                    if (r3 == 1 & lev == 2) {
                        if( r3>9 & r22>9){ //склонение при тысячах больше 9
                            o +=  women[5][indexPad] + " ";
                        } else {
                            o +=  women[4][indexPad] + " "; // 1 тысяча в женском роде
                        }
                    } else {
                        if (r3 ==2 & lev == 2) {
                            o +=  women[5][indexPad] + " "; // 2 тысячи в женском роде
                        } else {
                            if (lev >= 3 & r3 ==1 & r22 <=99) { //для миллионов и больше
                                if(r22!=11){
                                    o += forms[lev][indexPad] + " ";
                                } else {
                                    o += str10000[lev][indexPad] + " ";
                                }
                            } else {
                                o += str10000[lev][indexPad] + " ";
                            }
                        }
                    }
                    lev--;
                }
                break;
                }

        return o;
    }
}